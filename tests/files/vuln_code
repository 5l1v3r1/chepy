{"body":"r\"\"\"\nDjango settings for tag project.\nGenerated by 'django-admin startproject' using Django 1.9.7.\nFor more information on this file, see\nhttps:\/\/docs.djangoproject.com\/en\/1.9\/topics\/settings\/\nFor the full list of settings and their values, see\nhttps:\/\/docs.djangoproject.com\/en\/1.9\/ref\/settings\/\n\"\"\"\n\nimport os\nimport environ\n\nenv = environ.Env()\n\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https:\/\/docs.djangoproject.com\/en\/1.9\/howto\/deployment\/checklist\/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = env('DJANGO_SECRET_KEY', default='osx*hq-(zkj=&&o!d%u&e-=^1%6y0gvsu9d)-#39k$i1(1+5&$')\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = env.bool('DJANGO_DEBUG', default=True)\n\nALLOWED_HOSTS = ['*']\n\nLOGIN_REDIRECT_URL = '\/profile'\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'debug_toolbar',\n    'tags',\n    'crispy_forms',\n    'storages'\n\n]\nCRISPY_TEMPLATE_PACK = 'bootstrap3'\n\nMIDDLEWARE_CLASSES = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n]\n\nROOT_URLCONF = 'tag.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'tag.wsgi.application'\n\n\n# Database\n# https:\/\/docs.djangoproject.com\/en\/1.9\/ref\/settings\/#databases\n\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n# Password validation\n# https:\/\/docs.djangoproject.com\/en\/1.9\/ref\/settings\/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https:\/\/docs.djangoproject.com\/en\/1.9\/topics\/i18n\/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https:\/\/docs.djangoproject.com\/en\/1.9\/howto\/static-files\/\n\nPROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))\n\nSTATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')\nSTATIC_URL = '\/static\/'\n\n# Extra places for collectstatic to find static files.\nSTATICFILES_DIRS = (\n    os.path.join(PROJECT_ROOT, 'static'),\n)\nMEDIA_ROOT = os.path.join(BASE_DIR, 'tags\/images')\n# MEDIA_ROOT = \"\/Users\/adamsiwiec\/Desktop\/Tag\/tag\/tags\/images\/\"\n# MEDIA_URL = \"\/images\/\"\n\n# Update database configuration with $DATABASE_URL.\nimport dj_database_url\ndb_from_env = dj_database_url.config(conn_max_age=500)\nDATABASES['default'].update(db_from_env)\n\n\n# Simplified static file serving.\n# https:\/\/warehouse.python.org\/project\/whitenoise\/\n\n# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\n\nAWS_HEADERS = {  # see http:\/\/developer.yahoo.com\/performance\/rules.html#expires\n        'Expires': 'Thu, 31 Dec 2099 20:00:00 GMT',\n        'Cache-Control': 'max-age=94608000',\n    }\n\nAWS_STORAGE_BUCKET_NAME = env('S3_BUCKET', default='tagyourit')\nAWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID', default='AKIAIDO23IONYN4UVTDQ')\nAWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY', default='NXekk3ZVc55rQ06RkEXhmUWNvPw5X\/AZt5FrdNXr')\n\n# Tell django-storages that when coming up with the URL for an item in S3 storage, keep\n# it simple - just use this domain plus the path. (If this isn't set, things get complicated).\n# This controls how the `static` template tag from `staticfiles` gets expanded, if you're using it.\n# We also use it in the next setting.\nAWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME\n\n# This is used by the `static` template tag from `static`, if you're using that. Or if anything else\n# refers directly to STATIC_URL. So it's safest to always set it.\nSTATIC_URL = \"https:\/\/%s\/\" % AWS_S3_CUSTOM_DOMAIN\n\n# Tell the staticfiles app to use S3Boto storage when writing the collected static files (when\n# you run `collectstatic`).\n# STATICFILES_STORAGE = 'storages.backends.s3boto.S3BotoStorage'\n\nSTATICFILES_LOCATION = 'static'\nMEDIAFILES_LOCATION = 'media'\nimport tag.custom_storages\nSTATICFILES_STORAGE = 'tag.custom_storages.StaticStorage'\nSTATIC_URL = \"https:\/\/%s\/%s\/\" % (AWS_S3_CUSTOM_DOMAIN, STATICFILES_LOCATION)\n\n\nMEDIA_URL = \"https:\/\/%s\/%s\/\" % (AWS_S3_CUSTOM_DOMAIN, MEDIAFILES_LOCATION)\nDEFAULT_FILE_STORAGE = 'tag.custom_storages.MediaStorage'\n\n\nBROKER_URL = os.getenv('REDIS_URL', 'redis:\/\/localhost:6379')\nCELERY_RESULT_BACKEND = os.getenv('REDIS_URL', 'redis:\/\/localhost:6379')\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\n","status":200,"headers":["Content-Security-Policy","Strict-Transport-Security","X-Content-Type-Options","X-Frame-Options","X-XSS-Protection","ETag","Content-Type","Cache-Control","X-Geo-Block-List","X-GitHub-Request-Id","Content-Encoding","Content-Length","Accept-Ranges","Date","Via","Connection","X-Served-By","X-Cache","X-Cache-Hits","X-Timer","Vary","Access-Control-Allow-Origin","X-Fastly-Request-ID","Expires","Source-Age"]}