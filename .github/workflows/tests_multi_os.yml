name: tests

on: [push, pull_request]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-18.04, windows-latest, macOS-latest]
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      id: devcache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-dev-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install
      if: steps.devcache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements.txt
        python -m pip install --upgrade pip
        pip install .
    - name: Install test requirements
      run: |
        pip install sphinx recommonmark pytest pytest-cov bandit
    - name: Test with pytest
      run: |
        pytest --disable-pytest-warnings --cov-report=xml --cov=chepy --cov-config=.coveragerc tests/
        coverage report -m
    - name: Test with bandit
      run: |
        bandit --recursive chepy/ --ignore-nosec --skip B101,B413,B303,B310,B112,B304,B320,B410,B404
    - name: Test docs
      run: |
        make -C docs/ clean html
    - name: Upload to codecov
      if: startsWith(matrix.os,'ubuntu')
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.xml
    # - name: Run pyinstaller
    #   if: startsWith(matrix.python-version,'3.7')
    #   run: |
    #     ls -l 
    #     ls -l ../
    #     pyinstaller cli.py --name chepy --onefile
    # - name: Upload pyinstaller build
    #   if: startsWith(matrix.python-version,'3.7')
    #   run: |
    #     pyinstaller cli.py --name chepy --onefile
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: chepy-${{ matrix.os }}-{{ matrix.python-version }}
    #     path: dist/chepy
